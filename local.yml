version: '3'

volumes:
  postgres_data_local:
    driver: local
  tmp_uploads:
    driver: local
  es_data:
    driver: local
  kibanadata:
    driver: local

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    volumes:
      - .:/app
      - tmp_uploads:/tmp/uploads
    env_file: ./compose/local/local.env
    depends_on:
      - redis_server
      - postgres_server

  app:
    <<: *django
    ports:
      - "8000:8000"
    command: python manage.py runserver 0.0.0.0:8000

  celeryworker:
    <<: *django
    command: celery -A backend worker -l INFO

  redis_server:
    image: redis:6.0

  postgres_server:
    image: postgres:13
    volumes:
      - postgres_data_local:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    env_file: ./compose/local/local.env

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: elasticsearch
    volumes:
      - es_data:/usr/share/elasticsearch/data
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - xpack.monitoring.collection.enabled=true
      - cluster.routing.allocation.disk.threshold_enabled=false
      - xpack.security.enabled=false
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    volumes:
      - kibanadata:/usr/share/kibana/data
    environment:
      - "ELASTICSEARCH_HOSTS=http://elasticsearch:9200"
      - xpack.security.enabled=false
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
